[{"/home/nozura/DEv/React/whatnime/src/reportWebVitals.js":"1","/home/nozura/DEv/React/whatnime/src/router.js":"2","/home/nozura/DEv/React/whatnime/src/index.js":"3","/home/nozura/DEv/React/whatnime/src/pages/Home/index.js":"4","/home/nozura/DEv/React/whatnime/src/components/Navbar/index.js":"5","/home/nozura/DEv/React/whatnime/src/App.js":"6","/home/nozura/DEv/React/whatnime/src/parts/Hero/index.js":"7","/home/nozura/DEv/React/whatnime/src/parts/Upfile/index.js":"8","/home/nozura/DEv/React/whatnime/src/components/Dropfile/index.js":"9","/home/nozura/DEv/React/whatnime/src/parts/Search/index.js":"10","/home/nozura/DEv/React/whatnime/src/parts/Services/index.js":"11","/home/nozura/DEv/React/whatnime/src/parts/Steps/index.js":"12","/home/nozura/DEv/React/whatnime/src/parts/Footer/index.js":"13","/home/nozura/DEv/React/whatnime/src/components/Button/index.js":"14","/home/nozura/DEv/React/whatnime/src/components/Dialog/index.js":"15","/home/nozura/DEv/React/whatnime/src/utils/SecondConverter.js":"16","/home/nozura/DEv/React/whatnime/src/pages/Privacy/index.js":"17","/home/nozura/DEv/React/whatnime/src/components/ButtonBack/index.js":"18","/home/nozura/DEv/React/whatnime/src/pages/Terms/index.js":"19","/home/nozura/DEv/React/whatnime/src/pages/About/index.js":"20","/home/nozura/DEv/React/whatnime/src/pages/404/index.js":"21","/home/nozura/DEv/React/whatnime/src/pages/Detail/index.js":"22","/home/nozura/DEv/React/whatnime/src/parts/Character/index.js":"23"},{"size":362,"mtime":1608614521672,"results":"24","hashOfConfig":"25"},{"size":1186,"mtime":1610005918531,"results":"26","hashOfConfig":"25"},{"size":614,"mtime":1609231590850,"results":"27","hashOfConfig":"25"},{"size":634,"mtime":1609422397052,"results":"28","hashOfConfig":"25"},{"size":1260,"mtime":1609327780013,"results":"29","hashOfConfig":"25"},{"size":149,"mtime":1608983681754,"results":"30","hashOfConfig":"25"},{"size":812,"mtime":1609045676576,"results":"31","hashOfConfig":"25"},{"size":869,"mtime":1608955972265,"results":"32","hashOfConfig":"25"},{"size":1062,"mtime":1608943833117,"results":"33","hashOfConfig":"25"},{"size":916,"mtime":1609327979506,"results":"34","hashOfConfig":"25"},{"size":1727,"mtime":1609231698753,"results":"35","hashOfConfig":"25"},{"size":1645,"mtime":1609231718168,"results":"36","hashOfConfig":"25"},{"size":2925,"mtime":1609140254146,"results":"37","hashOfConfig":"25"},{"size":2228,"mtime":1608790923014,"results":"38","hashOfConfig":"25"},{"size":7923,"mtime":1609905763872,"results":"39","hashOfConfig":"25"},{"size":546,"mtime":1608905379762,"results":"40","hashOfConfig":"25"},{"size":6876,"mtime":1609422405182,"results":"41","hashOfConfig":"25"},{"size":487,"mtime":1609031379034,"results":"42","hashOfConfig":"25"},{"size":14668,"mtime":1609422411705,"results":"43","hashOfConfig":"25"},{"size":6413,"mtime":1609422386477,"results":"44","hashOfConfig":"25"},{"size":772,"mtime":1609422418536,"results":"45","hashOfConfig":"25"},{"size":6011,"mtime":1610062392328,"results":"46","hashOfConfig":"25"},{"size":2577,"mtime":1609905729838,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1cuhnxe",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},"/home/nozura/DEv/React/whatnime/src/reportWebVitals.js",[],["105","106"],"/home/nozura/DEv/React/whatnime/src/router.js",[],["107","108"],"/home/nozura/DEv/React/whatnime/src/index.js",[],"/home/nozura/DEv/React/whatnime/src/pages/Home/index.js",[],["109","110"],"/home/nozura/DEv/React/whatnime/src/components/Navbar/index.js",[],"/home/nozura/DEv/React/whatnime/src/App.js",[],["111","112"],"/home/nozura/DEv/React/whatnime/src/parts/Hero/index.js",[],"/home/nozura/DEv/React/whatnime/src/parts/Upfile/index.js",[],["113","114"],"/home/nozura/DEv/React/whatnime/src/components/Dropfile/index.js",[],["115","116"],"/home/nozura/DEv/React/whatnime/src/parts/Search/index.js",[],["117","118"],"/home/nozura/DEv/React/whatnime/src/parts/Services/index.js",[],"/home/nozura/DEv/React/whatnime/src/parts/Steps/index.js",[],["119","120"],"/home/nozura/DEv/React/whatnime/src/parts/Footer/index.js",[],"/home/nozura/DEv/React/whatnime/src/components/Button/index.js",[],"/home/nozura/DEv/React/whatnime/src/components/Dialog/index.js",["121"],"import React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Fade from \"react-reveal/Fade\";\n\nimport \"./Dialog.scss\";\n\nexport default function AlertDialog({ data, showDialog, isUrl }) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [dataFetched, setDataFetched] = useState([]);\n  const [resData, setResData] = useState([]);\n\n  const handleClose = () => {\n    showDialog(false);\n  };\n\n  const handleDetail = () => {\n    <Redirect to={`/detail/${resData.mal_id}`} />;\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (!isUrl) {\n      const fetchData = async () =>\n        await axios({\n          url: `https://trace.moe/api/search?url=${data}`,\n        }).then(async (res) => {\n          // console.log(\"res1\", res);\n          const result = res.data.docs[0];\n          setResData(res.data.docs[0]);\n          await axios({\n            url: `https://graphql.anilist.co`,\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"application/json\",\n            },\n            data: JSON.stringify({\n              query: `query ($id: Int) {\n                  Media (id: $id, type: ANIME) { \n                    id\n                    title {\n                      romaji\n                      english\n                      native\n                    }\n                    season\n                    format\n                    seasonYear\n                    source\n                    coverImage {\n                      large\n                    }\n                    averageScore\n                    episodes\n                    genres\n                  }\n                }`,\n              variables: { id: result.anilist_id },\n            }),\n          })\n            .then((res2) => {\n              // console.log(\"res2\", res2);\n              setDataFetched(res2);\n              setIsLoading(false);\n            })\n            .catch((err) => {\n              // Jika error atau tidak ditemukan\n              console.log(err);\n            });\n        });\n      fetchData();\n    } else {\n      const fetchData = async () =>\n        await axios({\n          url: \"https://trace.moe/api/search\",\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          data: { image: data },\n        })\n          .then(async (res) => {\n            // console.log(\"res1\", res);\n            const result = res.data.docs[0];\n            await axios({\n              url: `https://graphql.anilist.co`,\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n              },\n              data: JSON.stringify({\n                query: `query ($id: Int) {\n                    Media (id: $id, type: ANIME) { \n                      id\n                      title {\n                        romaji\n                        english\n                        native\n                      }\n                      season\n                      format\n                      seasonYear\n                      source\n                      coverImage {\n                        large\n                      }\n                      averageScore\n                      episodes\n                      genres\n                    }\n                  }`,\n                variables: { id: result.anilist_id },\n              }),\n            }).then((res2) => {\n              // console.log(\"res2\", res2);\n              setDataFetched(res2);\n              setIsLoading(false);\n            });\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      fetchData();\n    }\n\n    return () => {};\n  }, [data, isUrl]);\n\n  return (\n    <div>\n      <Dialog\n        open={true}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        maxWidth=\"md\"\n      >\n        {isLoading ? (\n          <div className=\"loading\">\n            <img\n              src=\"https://media2.giphy.com/media/UWPUmGBxBKDeNfi6N6/giphy.gif\"\n              alt=\"imgLumine\"\n              width=\"73%\"\n              className=\"imgLoading\"\n            />\n            <p>Loading ...</p>\n          </div>\n        ) : (\n          <div className=\"dialog-content\">\n            <DialogContent>\n              <div>\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"player-wrapper\">\n                      <img\n                        className=\"cover-img\"\n                        src={dataFetched.data.data.Media.coverImage.large}\n                        alt=\"coverIMG\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"card card-desc\">\n                      <div className=\"card-body\">\n                        <Fade top duration={1100}>\n                          <Typography variant=\"h6\">\n                            {dataFetched.data.data.Media.title.romaji}\n                          </Typography>\n                        </Fade>\n                        <Fade left duration={950}>\n                          <Rating\n                            readOnly\n                            max={5}\n                            defaultValue={0}\n                            value={\n                              dataFetched.data.data.Media.averageScore / 20\n                            }\n                            name=\"rating-anime\"\n                          />\n                        </Fade>\n                        <Fade right duration={950}>\n                          <div className=\"genre-wrapper\">\n                            {dataFetched.data.data.Media.genres.map(\n                              (genre, index) => {\n                                return <span key={index}>{genre}, </span>;\n                              }\n                            )}\n                          </div>\n                        </Fade>\n                        <Fade bottom duration={990}>\n                          <Typography variant=\"body2\">\n                            Season : {dataFetched.data.data.Media.seasonYear}{\" \"}\n                            {dataFetched.data.data.Media.season}\n                          </Typography>\n                          <Typography variant=\"body2\">\n                            Source : {dataFetched.data.data.Media.source}\n                          </Typography>\n                          <Typography variant=\"body2\">\n                            Format : {dataFetched.data.data.Media.format}\n                          </Typography>\n                          <Typography variant=\"body2\">\n                            Episodes : {dataFetched.data.data.Media.episodes}\n                          </Typography>\n                        </Fade>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\" autoFocus>\n                Close\n              </Button>\n              <Button color=\"primary\" autoFocus>\n                <Link to={`/detail/${resData.mal_id}`}>Detail</Link>\n              </Button>\n            </DialogActions>\n          </div>\n        )}\n      </Dialog>\n    </div>\n  );\n}\n\nDialog.propTypes = {\n  data: propTypes.array,\n  showDialog: propTypes.func,\n  isUrl: propTypes.bool,\n};\n","/home/nozura/DEv/React/whatnime/src/utils/SecondConverter.js",["122"],"function secondsToHms(seconds) {\n  if (!seconds) return \"\";\n\n  let duration = seconds;\n  let hours = duration / 3600;\n  duration = duration % 3600;\n\n  let min = parseInt(duration / 60);\n  duration = duration % 60;\n\n  let sec = parseInt(duration);\n\n  if (sec < 10) {\n    sec = `0${sec}`;\n  }\n  if (min < 10) {\n    min = `0${min}`;\n  }\n\n  if (parseInt(hours, 10) > 0) {\n    return `${parseInt(hours, 10)}h ${min}m ${sec}s`;\n  } else if (min == 0) {\n    return `${sec}s`;\n  } else {\n    return `${min}m ${sec}s`;\n  }\n}\n\nexport default secondsToHms;\n","/home/nozura/DEv/React/whatnime/src/pages/Privacy/index.js",[],"/home/nozura/DEv/React/whatnime/src/components/ButtonBack/index.js",[],"/home/nozura/DEv/React/whatnime/src/pages/Terms/index.js",[],"/home/nozura/DEv/React/whatnime/src/pages/About/index.js",[],"/home/nozura/DEv/React/whatnime/src/pages/404/index.js",[],"/home/nozura/DEv/React/whatnime/src/pages/Detail/index.js",["123","124","125"],"/home/nozura/DEv/React/whatnime/src/parts/Character/index.js",["126"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Character.scss\";\nimport propTypes from \"prop-types\";\n\nexport default function Character({ id }) {\n  const [characterFetched, setCharacterFetched] = useState([]);\n  const getCharacter = async () => {\n    await axios({\n      url: `https://api.jikan.moe/v3/anime/${id}/characters_staff`,\n    }).then((res) => {\n      setCharacterFetched(res);\n    });\n  };\n  useEffect(() => {\n    getCharacter();\n\n    return () => {};\n  }, []);\n  console.log(characterFetched);\n\n  return characterFetched ? (\n    <p>loading..</p>\n  ) : (\n    <div>\n      <section className=\"character\">\n        <div className=\"container\">\n          <h4>Character</h4>\n          <div className=\"row\">\n            {characterFetched.characters.map((character) => (\n              <div className=\"col-md-6\">\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"card\">\n                      <div className=\"row\">\n                        <div className=\"col-6\">\n                          <div className=\"row\">\n                            <img\n                              src={character.img_url}\n                              alt=\"img-profile\"\n                              width=\"60\"\n                            />\n                            <div className=\"d-flex justify-content-between flex-column\">\n                              <span>{character.name}</span>\n                              <span>{character.role}</span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-6\">\n                          <div className=\"row align-items-end\">\n                            <div className=\"d-flex justify-content-between flex-column\">\n                              <span>{character.voice_actors[0].name}</span>\n                              <span>{character.voice_actors[0].language}</span>\n                            </div>\n                            <img\n                              src={character.voice_actors[0].image_url}\n                              alt=\"img-profile\"\n                              width=\"60\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nCharacter.prototype = {\n  id: propTypes.number,\n};\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"129","replacedBy":"134"},{"ruleId":"127","replacedBy":"135"},{"ruleId":"129","replacedBy":"136"},{"ruleId":"127","replacedBy":"137"},{"ruleId":"129","replacedBy":"138"},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"129","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":24,"column":9,"nodeType":"147","messageId":"148","endLine":24,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":22,"column":18,"nodeType":"151","messageId":"152","endLine":22,"endColumn":20},{"ruleId":"145","severity":1,"message":"153","line":1,"column":38,"nodeType":"147","messageId":"148","endLine":1,"endColumn":49},{"ruleId":"145","severity":1,"message":"154","line":13,"column":10,"nodeType":"147","messageId":"148","endLine":13,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":44,"column":6,"nodeType":"157","endLine":44,"endColumn":8,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":19,"column":6,"nodeType":"157","endLine":19,"endColumn":8,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],["161"],["162"],["161"],["162"],["161"],["162"],["161"],["162"],["161"],["162"],["161"],["162"],"no-unused-vars","'handleDetail' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useCallback' is defined but never used.","'characterFetched' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataFetched' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'getCharacter'. Either include it or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [dataFetched, id]",{"range":"169","text":"170"},"Update the dependencies array to be: [getCharacter]",{"range":"171","text":"172"},[1211,1213],"[dataFetched, id]",[509,511],"[getCharacter]"]